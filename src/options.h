#ifndef OPTIONS_H_
#define OPTIONS_H_
#include <vector>
#include <string>
//Class reads in all arguments for different types of executables compiled.  
using namespace std;
class Options
{
private:
public:
Options(int argc, char **argv);
void print();
unsigned int seed;
//Constraints
vector<int> sec_structure;

//Database Paths
string atoms_file;
string gen_confs;
string batoms_file;
string fragment_file;
string db_prefix;
string doublet_params;
string loop_db;
string weights;
string bin_dir;

//Structure Information
string sequence;
string master_struct;
string pdb_ids;
string starting_struct;
string modelfile;
string edge_file;


//Simulation parameters
int 	   iteration_num;
int 	   con_start;
int 	   write_steps;
int 	   max_leaves;
int 	   max_clust;
int 	   constraint_id;
int 	   randomize_num;
int 	   total_simulations;
int 	   struct_pos;
int 	   movegroup; 
float  resolution; 
float  p_o_upper; 
float  p_o_lower; 
int debug;
int        loop_type;
int        loop_pos;
int        small_side;
int        asymmetry;

//Help
int 	helpflag;

//Output files
string prefix; //given by user
string input_file; //given by user
string pdb_id;
string conf_space;
//generated by program
string out_struct;
string out_scores;
string out_nnodes;

string out_hydro;
string out_doublet;
string out_packing;
string out_overall;
string out_simname;
//Weightings used for each score. These are optomized 
};


#endif



