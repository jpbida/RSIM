assembleCons v1.0 
--------------------------------------------------------
assembleCons builds the tertiary structure of an RNA molecule using the parameter files generated from the submitGenBuild application. The example can be run by first running the example in ./submitGenBuild and then running ./assembleCons.sh

This application uses the following parameter file

### Build Sequence RSIM configuration file ###

#### RSIM databases ##########################
frag_nt =   ../../data/frag_nt 
frag_at =   ../../data/frag_at
frag_db =   ../../data/frag_db
loop_db =   ../../data/loops
lib_files=  ../../data/libs/
doublet_params= ../../data/doublet.params

sequence = GGAUGCCUCCCGAGUGCAUCC
structure= ((((((.........))))))

### Constraint_id is the id in the paramter file(the first column) ###
constraint_id=4  

### input_file is the prefix of the parameter files generated by submitGenBuild ###
input_file=../submitGenBuild/helix

### Parameter File Descriptions ###
##############################################################################################
helix_con.txt
##############################################################################################
this file contains the constraints that should be met at each step 
of the fragment assembly process. It is generated by submitGenCons and contains the 
following columns

constraint_set_id   step_id   nt1  nt2  constraint_type

constraint_set_id - Multiple builds can be in a given file this is the id for a given build
step_id - step in the build
nt1 - position of the first nucleotide in the constraint
nt2 - position of the second nucleotide in the constraint
constraint_type - By default RSIM uses crude constraints (-7) that pair bases in planar or stacked conformations. 
other types include 

##############################################################################################
Constraint Types
Type -9 - Any hydrogen bonded planar value (1-9)
Type -8 - Any hydrogen bonded planar orientation with relaxed planar constraints(301-318)
Type -7 - Crude Planar or Stacked no hydrogen bonding necessary
Type -2 - Didn't match any constraints
Type -1 - C1 distance < 14A - used for filtering fragments
Type 0 - Planar orientation but no defined hydrogen bonding
W = Watson side(0)
H = Hoogsteen side(1)
S = Sugar side(2)

CIS
Type 1 - W:W 
Type 2 - W:H 
Type 3 - W:S 
Type 4 - H:W 
Type 5 - H:H 
Type 6 - H:S 
Type 7 - S:W 
Type 8 - S:H 
Type 9 - S:S 
TRANS 10-18

301-318 same as 1-18 but with larger base angles

First position list 
Type 19 - inward stacking (bases coordinate systems are in same direction) 
Type 20 - outward stacking (bases coordinate systems are facing each other)
Type 21 - upward stacking(bases coordinate systems are in opposite directions)

Type 219-221 sames as 19-21 but with more relaxed constraints
##############################################################################################

##############################################################################################
helix_pos.txt
##############################################################################################
This file contains the position of the fragments that are replaced at a given step

constraint_set_id    step_id    nt


##############################################################################################
helix_csh.txt
##############################################################################################
This file contains the position of nucleotides that are considered in clashes 

constraint_set_id    step_id    clash_vector (0=not included, 1= included) 


### Seed is the random seed used ###
seed =42

### Out of the PDB file contianing the results. 5 models are generated ###
output_prefix=./helix_out_

### p_o_upper/lower is the squared distance threshold for the phosphate-oxygen bond between fragments ####
p_o_upper=4;
p_o_lower=1.2;

### con_start tells the program to start at a given step (second column in parameter files) ##
con_start=0

### If write_steps=1 each time a constraint is met it will be saved in a PDB file ##
write_steps=1

### iteraction_num = number of fragment pairs to test before giving up on a constraint and moving back to the previous constraint ##
iteration_num=10000
### max_leaves = number of structures meeting a given constraint to keep in memory to fall back to if future steps fail ##
max_leaves=15
### max_clusts = Used when multiple fragments are subsituted ##
max_clust=100

## Minimum difference in RMSD between structures stored meeting each constraint step
resolution=0.75

